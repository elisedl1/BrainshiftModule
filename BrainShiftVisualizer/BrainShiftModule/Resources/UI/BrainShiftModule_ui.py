# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/elisedonszelmann-lund/BrainShiftVisualizer/BrainShiftVisualizer/BrainShiftModule/Resources/UI/BrainShiftModule.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_BrainShiftModule(object):
    def setupUi(self, BrainShiftModule):
        BrainShiftModule.setObjectName("BrainShiftModule")
        BrainShiftModule.resize(586, 575)
        self.formLayout = QtWidgets.QFormLayout(BrainShiftModule)
        self.formLayout.setContentsMargins(-1, 0, -1, -1)
        self.formLayout.setObjectName("formLayout")
        self.label_2 = QtWidgets.QLabel(BrainShiftModule)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.label_2)
        self.referenceVolume = qMRMLNodeComboBox(BrainShiftModule)
        self.referenceVolume.setNodeTypes(['vtkMRMLScalarVolumeNode'])
        self.referenceVolume.setShowChildNodeTypes(False)
        self.referenceVolume.setNoneEnabled(True)
        self.referenceVolume.setAddEnabled(True)
        self.referenceVolume.setRemoveEnabled(True)
        self.referenceVolume.setObjectName("referenceVolume")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.referenceVolume)
        self.label_6 = QtWidgets.QLabel(BrainShiftModule)
        self.label_6.setObjectName("label_6")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.label_6)
        self.backgroundVolume = qMRMLNodeComboBox(BrainShiftModule)
        self.backgroundVolume.setNodeTypes([])
        self.backgroundVolume.setHideChildNodeTypes([])
        self.backgroundVolume.setInteractionNodeSingletonTag("")
        self.backgroundVolume.setObjectName("backgroundVolume")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.backgroundVolume)
        self.label = QtWidgets.QLabel(BrainShiftModule)
        self.label.setObjectName("label")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label)
        self.transformNode = qMRMLNodeComboBox(BrainShiftModule)
        self.transformNode.setNodeTypes([])
        self.transformNode.setHideChildNodeTypes([])
        self.transformNode.setInteractionNodeSingletonTag("")
        self.transformNode.setObjectName("transformNode")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.SpanningRole, self.transformNode)
        self.label_3 = QtWidgets.QLabel(BrainShiftModule)
        self.label_3.setObjectName("label_3")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.displacementMagnitudeVolume = qMRMLCheckableNodeComboBox(BrainShiftModule)
        self.displacementMagnitudeVolume.setAddEnabled(True)
        self.displacementMagnitudeVolume.setRenameEnabled(True)
        self.displacementMagnitudeVolume.setObjectName("displacementMagnitudeVolume")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.displacementMagnitudeVolume)
        self.applyButton = QtWidgets.QPushButton(BrainShiftModule)
        self.applyButton.setEnabled(False)
        self.applyButton.setObjectName("applyButton")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.applyButton)
        self.label_4 = QtWidgets.QLabel(BrainShiftModule)
        self.label_4.setObjectName("label_4")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.existingDisplacementVolumeSelector = qMRMLCheckableNodeComboBox(BrainShiftModule)
        self.existingDisplacementVolumeSelector.setObjectName("existingDisplacementVolumeSelector")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.existingDisplacementVolumeSelector)
        self.loadDisplacementVolumeButton = QtWidgets.QPushButton(BrainShiftModule)
        self.loadDisplacementVolumeButton.setObjectName("loadDisplacementVolumeButton")
        self.formLayout.setWidget(11, QtWidgets.QFormLayout.SpanningRole, self.loadDisplacementVolumeButton)
        self.label_5 = QtWidgets.QLabel(BrainShiftModule)
        self.label_5.setObjectName("label_5")
        self.formLayout.setWidget(12, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.colorMapSelector = qMRMLColorTableComboBox(BrainShiftModule)
        self.colorMapSelector.setObjectName("colorMapSelector")
        self.formLayout.setWidget(12, QtWidgets.QFormLayout.FieldRole, self.colorMapSelector)
        self.label_7 = QtWidgets.QLabel(BrainShiftModule)
        self.label_7.setObjectName("label_7")
        self.formLayout.setWidget(14, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.enableHoverDisplayCheckbox = ctkCheckBox(BrainShiftModule)
        self.enableHoverDisplayCheckbox.setObjectName("enableHoverDisplayCheckbox")
        self.formLayout.setWidget(14, QtWidgets.QFormLayout.FieldRole, self.enableHoverDisplayCheckbox)
        self.thresholdSlider = ctkDoubleRangeSlider(BrainShiftModule)
        self.thresholdSlider.setMaximum(50.0)
        self.thresholdSlider.setMaximumValue(10.0)
        self.thresholdSlider.setOrientation(QtCore.Qt.Horizontal)
        self.thresholdSlider.setObjectName("thresholdSlider")
        self.formLayout.setWidget(16, QtWidgets.QFormLayout.FieldRole, self.thresholdSlider)
        self.label_8 = QtWidgets.QLabel(BrainShiftModule)
        self.label_8.setObjectName("label_8")
        self.formLayout.setWidget(16, QtWidgets.QFormLayout.LabelRole, self.label_8)

        self.retranslateUi(BrainShiftModule)
        QtCore.QMetaObject.connectSlotsByName(BrainShiftModule)

    def retranslateUi(self, BrainShiftModule):
        _translate = QtCore.QCoreApplication.translate
        self.label_2.setText(_translate("BrainShiftModule", "Mapping Image:"))
        self.referenceVolume.setToolTip(_translate("BrainShiftModule", "Pick the output to the algorithm."))
        self.referenceVolume.setProperty("SlicerParameterName", _translate("BrainShiftModule", "referenceVolume"))
        self.label_6.setText(_translate("BrainShiftModule", "Background Image:"))
        self.label.setText(_translate("BrainShiftModule", "Transformation:"))
        self.transformNode.setProperty("SlicerParameterName", _translate("BrainShiftModule", "transformNode"))
        self.label_3.setText(_translate("BrainShiftModule", "Output Volume:"))
        self.applyButton.setToolTip(_translate("BrainShiftModule", "Run the algorithm."))
        self.applyButton.setText(_translate("BrainShiftModule", "Compute Mapping"))
        self.label_4.setText(_translate("BrainShiftModule", "Load Volume:"))
        self.loadDisplacementVolumeButton.setText(_translate("BrainShiftModule", "Load Volume"))
        self.label_5.setText(_translate("BrainShiftModule", "Color Map:"))
        self.label_7.setText(_translate("BrainShiftModule", "Enable Mouse mm Display"))
        self.label_8.setText(_translate("BrainShiftModule", "Threshold Slider:"))
from ctkCheckBox import ctkCheckBox
from ctkDoubleRangeSlider import ctkDoubleRangeSlider
from qMRMLCheckableNodeComboBox import qMRMLCheckableNodeComboBox
from qMRMLColorTableComboBox import qMRMLColorTableComboBox
from qMRMLNodeComboBox import qMRMLNodeComboBox
from qMRMLWidget import qMRMLWidget
